// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231003044335_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingId"));

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.HasKey("BuildingId");

                    b.HasIndex("CampusId");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CampusId");

                    b.ToTable("Campus");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Classroom", b =>
                {
                    b.Property<int>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassroomId"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("RoomConfigId")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ClassroomId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("RoomConfigId");

                    b.ToTable("Classroom");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseDesc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("CourseNumber")
                        .HasColumnType("int");

                    b.Property<string>("CoursePrefix")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CourseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CreditHours")
                        .HasColumnType("int");

                    b.Property<int>("UniProgramId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("CourseTypeId");

                    b.HasIndex("UniProgramId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.CourseSemester", b =>
                {
                    b.Property<int>("CourseSemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseSemesterId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityTaught")
                        .HasColumnType("int");

                    b.Property<int>("SemesterTypeId")
                        .HasColumnType("int");

                    b.HasKey("CourseSemesterId");

                    b.HasIndex("CourseId");

                    b.HasIndex("SemesterTypeId");

                    b.ToTable("CourseSemester");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.CourseType", b =>
                {
                    b.Property<int>("CourseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseTypeId"));

                    b.Property<string>("CourseTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CourseTypeId");

                    b.ToTable("CourseType");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.DayBlock", b =>
                {
                    b.Property<int>("DaysBlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DaysBlockId"));

                    b.Property<string>("DayName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("DaysBlockId");

                    b.ToTable("DayBlock");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Instructor", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Adjunct")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.ToTable("Instructor");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorLoad", b =>
                {
                    b.Property<int>("InstructorLoadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorLoadId"));

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<int>("LoadHours")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.HasKey("InstructorLoadId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("SemesterId");

                    b.ToTable("InstructorLoad");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorRelease", b =>
                {
                    b.Property<int>("InstructorReleaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorReleaseId"));

                    b.Property<int>("ReleaseTimeAmount")
                        .HasColumnType("int");

                    b.Property<string>("ReleaseTimeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("InstructorReleaseId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("UserId");

                    b.ToTable("InstructorRelease");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorUniProgram", b =>
                {
                    b.Property<int>("InstructorProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorProgramId"));

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<int>("UniProgramId")
                        .HasColumnType("int");

                    b.HasKey("InstructorProgramId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("UniProgramId");

                    b.ToTable("InstructorUniProgram");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorWishlist", b =>
                {
                    b.Property<int>("InstructorWishlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorWishlistId"));

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("DayBlockId")
                        .HasColumnType("int");

                    b.Property<int?>("DaysBlockId")
                        .HasColumnType("int");

                    b.Property<string>("InstructorFormat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("InstructorNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstructorRanking")
                        .HasColumnType("int");

                    b.Property<int>("MeetingTimeId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.HasKey("InstructorWishlistId");

                    b.HasIndex("CampusId");

                    b.HasIndex("CourseId");

                    b.HasIndex("DayBlockId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("MeetingTimeId");

                    b.HasIndex("SemesterId");

                    b.ToTable("InstructorWishlist");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorWishlistDetails", b =>
                {
                    b.Property<int>("InstructorWishlistDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorWishlistDetailsId"));

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int?>("DayBlockId")
                        .HasColumnType("int");

                    b.Property<int?>("DaysBlockId")
                        .HasColumnType("int");

                    b.Property<string>("InstructorFormat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("InstructorRanking")
                        .HasColumnType("int");

                    b.Property<int>("InstructorWishlistId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeBlockId")
                        .HasColumnType("int");

                    b.HasKey("InstructorWishlistDetailsId");

                    b.HasIndex("CampusId");

                    b.HasIndex("DaysBlockId");

                    b.HasIndex("InstructorWishlistId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("TimeBlockId");

                    b.ToTable("InstructorWishlistDetails");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Major", b =>
                {
                    b.Property<int>("MajorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MajorID"));

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MajorID");

                    b.ToTable("Major");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.MeetingTime", b =>
                {
                    b.Property<int>("meetingTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("meetingTimeId"));

                    b.Property<string>("meetingTimeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("meetingTimeId");

                    b.ToTable("MeetingTime");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Modality", b =>
                {
                    b.Property<int>("ModalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModalityId"));

                    b.Property<string>("ModalityDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModalityName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ModalityId");

                    b.ToTable("Modality");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.PartOfTerm", b =>
                {
                    b.Property<int>("PartOfTermID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartOfTermID"));

                    b.Property<string>("partOfTermName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PartOfTermID");

                    b.ToTable("PartOfTerm");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.PayModel", b =>
                {
                    b.Property<int>("PayModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayModelId"));

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PayModelId");

                    b.ToTable("PayModel");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.PreReq", b =>
                {
                    b.Property<int>("PreReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreReqId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCoRequisite")
                        .HasColumnType("bit");

                    b.HasKey("PreReqId");

                    b.HasIndex("CourseId");

                    b.ToTable("PreReq");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.RoomConfig", b =>
                {
                    b.Property<int>("RoomConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomConfigId"));

                    b.Property<string>("RoomConfigName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoomConfigId");

                    b.ToTable("RoomConfiguration");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"));

                    b.Property<int?>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("DayBlockId")
                        .HasColumnType("int");

                    b.Property<int?>("FirstWeekEnroll")
                        .HasColumnType("int");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxEnrollment")
                        .HasColumnType("int");

                    b.Property<int?>("MeetingTimeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModalityId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PartofTermId")
                        .HasColumnType("int");

                    b.Property<int?>("PayModelId")
                        .HasColumnType("int");

                    b.Property<int?>("SectionStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int?>("ThirdWeekEnroll")
                        .HasColumnType("int");

                    b.Property<int?>("WhoPaysId")
                        .HasColumnType("int");

                    b.HasKey("SectionId");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("CourseId");

                    b.HasIndex("DayBlockId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("MeetingTimeId");

                    b.HasIndex("ModalityId");

                    b.HasIndex("PayModelId");

                    b.HasIndex("SectionStatusId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("WhoPaysId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.SectionStatus", b =>
                {
                    b.Property<int>("SectionStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionStatusId"));

                    b.Property<string>("StatusDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SectionStatusId");

                    b.ToTable("SectionStatus");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SemesterName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SemesterStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("SemesterTypesId")
                        .HasColumnType("int");

                    b.HasKey("SemesterId");

                    b.HasIndex("SemesterStatusId");

                    b.HasIndex("SemesterTypesId");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.SemesterStatus", b =>
                {
                    b.Property<int>("SemesterStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterStatusID"));

                    b.Property<string>("SemesterStatusDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SemesterStatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SemesterStatusID");

                    b.ToTable("SemesterStatus");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.SemesterType", b =>
                {
                    b.Property<int>("SemesterTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterTypeId"));

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SemesterTypeId");

                    b.ToTable("SemesterType");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("MajorId");

                    b.HasIndex("UserId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.StudentWishlist", b =>
                {
                    b.Property<int>("StudentWishListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentWishListId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("DayBlockId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<string>("StudentFormat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TimeBlockId")
                        .HasColumnType("int");

                    b.HasKey("StudentWishListId");

                    b.HasIndex("CourseId");

                    b.HasIndex("DayBlockId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentWishlist");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.TimeBlock", b =>
                {
                    b.Property<int>("TimeBlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeBlockId"));

                    b.Property<string>("TimeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TimeBlockId");

                    b.ToTable("TimeBlock");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.UniProgram", b =>
                {
                    b.Property<int>("UniProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniProgramId"));

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UniProgramId");

                    b.ToTable("UniProgram");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserEmail")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserFirst")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserLast")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.WhoPays", b =>
                {
                    b.Property<int>("WhoPaysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WhoPaysId"));

                    b.Property<string>("WhoPaysName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("WhoPaysId");

                    b.ToTable("WhoPays");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Building", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Classroom", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.RoomConfig", "RoomConfig")
                        .WithMany()
                        .HasForeignKey("RoomConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("RoomConfig");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Course", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.CourseType", "CourseType")
                        .WithMany()
                        .HasForeignKey("CourseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.UniProgram", "UniProgram")
                        .WithMany()
                        .HasForeignKey("UniProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseType");

                    b.Navigation("UniProgram");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.CourseSemester", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.SemesterType", "SemesterType")
                        .WithMany()
                        .HasForeignKey("SemesterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("SemesterType");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Instructor", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorLoad", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorRelease", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorUniProgram", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.UniProgram", "UniProgram")
                        .WithMany()
                        .HasForeignKey("UniProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("UniProgram");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorWishlist", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.DayBlock", "DayBlock")
                        .WithMany()
                        .HasForeignKey("DayBlockId");

                    b.HasOne("CASPAR.Infrastructure.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.MeetingTime", "MeetingTime")
                        .WithMany()
                        .HasForeignKey("MeetingTimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Course");

                    b.Navigation("DayBlock");

                    b.Navigation("Instructor");

                    b.Navigation("MeetingTime");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorWishlistDetails", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.DayBlock", "DayBlock")
                        .WithMany()
                        .HasForeignKey("DaysBlockId");

                    b.HasOne("CASPAR.Infrastructure.Models.InstructorWishlist", "InstructorWishlist")
                        .WithMany()
                        .HasForeignKey("InstructorWishlistId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.TimeBlock", "TimeBlock")
                        .WithMany()
                        .HasForeignKey("TimeBlockId");

                    b.Navigation("Campus");

                    b.Navigation("DayBlock");

                    b.Navigation("InstructorWishlist");

                    b.Navigation("Semester");

                    b.Navigation("TimeBlock");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.PreReq", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Section", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomId");

                    b.HasOne("CASPAR.Infrastructure.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.DayBlock", "DayBlock")
                        .WithMany()
                        .HasForeignKey("DayBlockId");

                    b.HasOne("CASPAR.Infrastructure.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId");

                    b.HasOne("CASPAR.Infrastructure.Models.MeetingTime", "MeetingTime")
                        .WithMany()
                        .HasForeignKey("MeetingTimeId");

                    b.HasOne("CASPAR.Infrastructure.Models.Modality", "Modality")
                        .WithMany()
                        .HasForeignKey("ModalityId");

                    b.HasOne("CASPAR.Infrastructure.Models.PayModel", "PayModel")
                        .WithMany()
                        .HasForeignKey("PayModelId");

                    b.HasOne("CASPAR.Infrastructure.Models.SectionStatus", "SectionStatus")
                        .WithMany()
                        .HasForeignKey("SectionStatusId");

                    b.HasOne("CASPAR.Infrastructure.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.WhoPays", "WhoPays")
                        .WithMany()
                        .HasForeignKey("WhoPaysId");

                    b.Navigation("Classroom");

                    b.Navigation("Course");

                    b.Navigation("DayBlock");

                    b.Navigation("Instructor");

                    b.Navigation("MeetingTime");

                    b.Navigation("Modality");

                    b.Navigation("PayModel");

                    b.Navigation("SectionStatus");

                    b.Navigation("Semester");

                    b.Navigation("WhoPays");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Semester", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.SemesterStatus", "SemesterStatus")
                        .WithMany()
                        .HasForeignKey("SemesterStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.SemesterType", "SemesterType")
                        .WithMany()
                        .HasForeignKey("SemesterTypesId");

                    b.Navigation("SemesterStatus");

                    b.Navigation("SemesterType");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Student", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Major", "Major")
                        .WithMany()
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Major");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.StudentWishlist", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.DayBlock", "DayBlock")
                        .WithMany()
                        .HasForeignKey("DayBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("DayBlock");

                    b.Navigation("Semester");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.UserRole", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
