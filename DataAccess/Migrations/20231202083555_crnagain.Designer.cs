// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231202083555_crnagain")]
    partial class crnagain
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingId"));

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.HasKey("BuildingId");

                    b.HasIndex("CampusId");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.HasKey("CampusId");

                    b.ToTable("Campus");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Classroom", b =>
                {
                    b.Property<int>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassroomId"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ClassroomId");

                    b.HasIndex("BuildingId");

                    b.ToTable("Classroom");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseDesc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("CourseNumber")
                        .HasColumnType("int");

                    b.Property<string>("CoursePrefix")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CreditHours")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("UniProgramId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("UniProgramId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.CourseSemester", b =>
                {
                    b.Property<int>("CourseSemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseSemesterId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityTaught")
                        .HasColumnType("int");

                    b.Property<int>("SemesterTypeId")
                        .HasColumnType("int");

                    b.HasKey("CourseSemesterId");

                    b.HasIndex("CourseId");

                    b.HasIndex("SemesterTypeId");

                    b.ToTable("CourseSemester");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.DayBlock", b =>
                {
                    b.Property<int>("DaysBlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DaysBlockId"));

                    b.Property<string>("DayName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.HasKey("DaysBlockId");

                    b.ToTable("DayBlock");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorLoad", b =>
                {
                    b.Property<int>("InstructorLoadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorLoadId"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LoadHours")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.HasKey("InstructorLoadId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("SemesterId");

                    b.ToTable("InstructorLoad");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorRelease", b =>
                {
                    b.Property<int>("InstructorReleaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorReleaseId"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ReleaseTimeAmount")
                        .HasColumnType("int");

                    b.Property<string>("ReleaseTimeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SemesterTypeId")
                        .HasColumnType("int");

                    b.HasKey("InstructorReleaseId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("SemesterTypeId");

                    b.ToTable("InstructorRelease");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorTime", b =>
                {
                    b.Property<int>("InstructorTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorTimeId"));

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int?>("DaysBlockId")
                        .HasColumnType("int");

                    b.Property<int>("InstructorWishlistModalityId")
                        .HasColumnType("int");

                    b.Property<int>("MeetingTimeId")
                        .HasColumnType("int");

                    b.HasKey("InstructorTimeId");

                    b.HasIndex("CampusId");

                    b.HasIndex("DaysBlockId");

                    b.HasIndex("InstructorWishlistModalityId");

                    b.HasIndex("MeetingTimeId");

                    b.ToTable("InstructorTime");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorUniProgram", b =>
                {
                    b.Property<int>("InstructorProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorProgramId"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UniProgramId")
                        .HasColumnType("int");

                    b.HasKey("InstructorProgramId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("UniProgramId");

                    b.ToTable("InstructorUniProgram");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorWishlist", b =>
                {
                    b.Property<int>("InstructorWishlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorWishlistId"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.HasKey("InstructorWishlistId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("SemesterId");

                    b.ToTable("InstructorWishlist");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorWishlistDetails", b =>
                {
                    b.Property<int>("InstructorWishlistDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorWishlistDetailsId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("InstructorNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstructorRanking")
                        .HasColumnType("int");

                    b.Property<int>("InstructorWishlistId")
                        .HasColumnType("int");

                    b.HasKey("InstructorWishlistDetailsId");

                    b.HasIndex("CourseId");

                    b.HasIndex("InstructorWishlistId");

                    b.ToTable("InstructorWishlistDetails");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorWishlistModality", b =>
                {
                    b.Property<int>("InstructorWishlistModalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorWishlistModalityId"));

                    b.Property<int?>("InstructorWishListDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("ModalityId")
                        .HasColumnType("int");

                    b.HasKey("InstructorWishlistModalityId");

                    b.HasIndex("InstructorWishListDetailsId");

                    b.HasIndex("ModalityId");

                    b.ToTable("InstructorWishlistModality");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Major", b =>
                {
                    b.Property<int>("MajorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MajorID"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MajorID");

                    b.ToTable("Major");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.MeetingTime", b =>
                {
                    b.Property<int>("meetingTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("meetingTimeId"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("meetingTimeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("meetingTimeId");

                    b.ToTable("MeetingTime");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Modality", b =>
                {
                    b.Property<int>("ModalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModalityId"));

                    b.Property<bool>("AdditionalWishlistInfo")
                        .HasColumnType("bit");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("ModalityDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModalityName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ModalityId");

                    b.ToTable("Modality");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.PartOfTerm", b =>
                {
                    b.Property<int>("PartOfTermID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartOfTermID"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("PartOfTermName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PartOfTermID");

                    b.ToTable("PartOfTerm");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.PayModel", b =>
                {
                    b.Property<int>("PayModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayModelId"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PayModelId");

                    b.ToTable("PayModel");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.PreReq", b =>
                {
                    b.Property<int>("PreReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreReqId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCoRequisite")
                        .HasColumnType("bit");

                    b.HasKey("PreReqId");

                    b.HasIndex("CourseId");

                    b.ToTable("PreReq");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Ranking", b =>
                {
                    b.Property<int>("RankingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RankingId"));

                    b.Property<int?>("Rank")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("RankingId");

                    b.ToTable("Rankings");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.RoomConfig", b =>
                {
                    b.Property<int>("RoomConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomConfigId"));

                    b.Property<string>("RoomConfigName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoomConfigId");

                    b.ToTable("RoomConfiguration");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CRN")
                        .HasColumnType("int");

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<int?>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("DayBlockId")
                        .HasColumnType("int");

                    b.Property<int?>("FirstWeekEnroll")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int?>("MaxEnrollment")
                        .HasColumnType("int");

                    b.Property<int?>("MeetingTimeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModalityId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PartOfTermId")
                        .HasColumnType("int");

                    b.Property<int?>("PayModelId")
                        .HasColumnType("int");

                    b.Property<int?>("SectionStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int?>("ThirdWeekEnroll")
                        .HasColumnType("int");

                    b.Property<int?>("WhoPaysId")
                        .HasColumnType("int");

                    b.HasKey("SectionId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CampusId");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("CourseId");

                    b.HasIndex("DayBlockId");

                    b.HasIndex("MeetingTimeId");

                    b.HasIndex("ModalityId");

                    b.HasIndex("PartOfTermId");

                    b.HasIndex("PayModelId");

                    b.HasIndex("SectionStatusId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("WhoPaysId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.SectionStatus", b =>
                {
                    b.Property<int>("SectionStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionStatusId"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("StatusDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SectionStatusId");

                    b.ToTable("SectionStatus");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SemesterName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SemesterStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterTypeId")
                        .HasColumnType("int");

                    b.HasKey("SemesterId");

                    b.HasIndex("SemesterStatusId");

                    b.HasIndex("SemesterTypeId");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.SemesterStatus", b =>
                {
                    b.Property<int>("SemesterStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterStatusID"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("SemesterStatusDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SemesterStatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SemesterStatusID");

                    b.ToTable("SemesterStatus");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.SemesterType", b =>
                {
                    b.Property<int>("SemesterTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterTypeId"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SemesterTypeId");

                    b.ToTable("SemesterType");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.StudentTime", b =>
                {
                    b.Property<int>("StudentTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentTimeId"));

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("StudentWishlistModalityId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeBlockId")
                        .HasColumnType("int");

                    b.HasKey("StudentTimeId");

                    b.HasIndex("CampusId");

                    b.HasIndex("StudentWishlistModalityId");

                    b.HasIndex("TimeBlockId");

                    b.ToTable("StudentTime");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.StudentWishlist", b =>
                {
                    b.Property<int>("StudentWishlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentWishlistId"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.HasKey("StudentWishlistId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("SemesterId");

                    b.ToTable("StudentWishlist");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.StudentWishlistDetails", b =>
                {
                    b.Property<int>("StudentWishlistDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentWishlistDetailsId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("StudentNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentWishlistId")
                        .HasColumnType("int");

                    b.HasKey("StudentWishlistDetailsId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentWishlistId");

                    b.ToTable("StudentWishlistDetails");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.StudentWishlistModality", b =>
                {
                    b.Property<int>("StudentWishlistModalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentWishlistModalityId"));

                    b.Property<int?>("ModalityId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentWishListDetailsId")
                        .HasColumnType("int");

                    b.HasKey("StudentWishlistModalityId");

                    b.HasIndex("ModalityId");

                    b.HasIndex("StudentWishListDetailsId");

                    b.ToTable("StudentWishlistModality");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.TimeBlock", b =>
                {
                    b.Property<int>("TimeBlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeBlockId"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("TimeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TimeBlockId");

                    b.ToTable("TimeBlock");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.UniProgram", b =>
                {
                    b.Property<int>("UniProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniProgramId"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UniProgramId");

                    b.ToTable("UniProgram");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.WhoPays", b =>
                {
                    b.Property<int>("WhoPaysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WhoPaysId"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("WhoPaysName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("WhoPaysId");

                    b.ToTable("WhoPays");
                });

            modelBuilder.Entity("Infrastructure.Models.ClassroomFeature", b =>
                {
                    b.Property<int>("ClassroomFeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassroomFeatureId"));

                    b.Property<string>("ClassroomFeatureName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.HasKey("ClassroomFeatureId");

                    b.ToTable("ClassroomFeature");
                });

            modelBuilder.Entity("Infrastructure.Models.ClassroomFeaturePossession", b =>
                {
                    b.Property<int>("FeaturePossessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeaturePossessionId"));

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.HasKey("FeaturePossessionId");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("FeatureId");

                    b.ToTable("ClassroomFeaturePossession");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GraduationYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Instructor", b =>
                {
                    b.HasBaseType("CASPAR.Infrastructure.Models.ApplicationUser");

                    b.Property<bool>("Adjunct")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Instructor");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Student", b =>
                {
                    b.HasBaseType("CASPAR.Infrastructure.Models.ApplicationUser");

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Building", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Classroom", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Course", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.UniProgram", "UniProgram")
                        .WithMany()
                        .HasForeignKey("UniProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UniProgram");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.CourseSemester", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.SemesterType", "SemesterType")
                        .WithMany()
                        .HasForeignKey("SemesterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("SemesterType");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorLoad", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorRelease", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.SemesterType", "SemesterType")
                        .WithMany()
                        .HasForeignKey("SemesterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("SemesterType");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorTime", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.DayBlock", "DayBlock")
                        .WithMany()
                        .HasForeignKey("DaysBlockId");

                    b.HasOne("CASPAR.Infrastructure.Models.InstructorWishlistModality", "InstructorWishlistModality")
                        .WithMany()
                        .HasForeignKey("InstructorWishlistModalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.MeetingTime", "MeetingTime")
                        .WithMany()
                        .HasForeignKey("MeetingTimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("DayBlock");

                    b.Navigation("InstructorWishlistModality");

                    b.Navigation("MeetingTime");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorUniProgram", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("InstructorId");

                    b.HasOne("CASPAR.Infrastructure.Models.UniProgram", "UniProgram")
                        .WithMany()
                        .HasForeignKey("UniProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("UniProgram");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorWishlist", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorWishlistDetails", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.InstructorWishlist", "InstructorWishlist")
                        .WithMany()
                        .HasForeignKey("InstructorWishlistId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("InstructorWishlist");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.InstructorWishlistModality", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.InstructorWishlistDetails", "InstructorWishlistDetails")
                        .WithMany()
                        .HasForeignKey("InstructorWishListDetailsId");

                    b.HasOne("CASPAR.Infrastructure.Models.Modality", "Modality")
                        .WithMany()
                        .HasForeignKey("ModalityId");

                    b.Navigation("InstructorWishlistDetails");

                    b.Navigation("Modality");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.PreReq", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Section", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("CASPAR.Infrastructure.Models.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusId");

                    b.HasOne("CASPAR.Infrastructure.Models.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomId");

                    b.HasOne("CASPAR.Infrastructure.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.DayBlock", "DayBlock")
                        .WithMany()
                        .HasForeignKey("DayBlockId");

                    b.HasOne("CASPAR.Infrastructure.Models.MeetingTime", "MeetingTime")
                        .WithMany()
                        .HasForeignKey("MeetingTimeId");

                    b.HasOne("CASPAR.Infrastructure.Models.Modality", "Modality")
                        .WithMany()
                        .HasForeignKey("ModalityId");

                    b.HasOne("CASPAR.Infrastructure.Models.PartOfTerm", "PartOfTerm")
                        .WithMany()
                        .HasForeignKey("PartOfTermId");

                    b.HasOne("CASPAR.Infrastructure.Models.PayModel", "PayModel")
                        .WithMany()
                        .HasForeignKey("PayModelId");

                    b.HasOne("CASPAR.Infrastructure.Models.SectionStatus", "SectionStatus")
                        .WithMany()
                        .HasForeignKey("SectionStatusId");

                    b.HasOne("CASPAR.Infrastructure.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.WhoPays", "WhoPays")
                        .WithMany()
                        .HasForeignKey("WhoPaysId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Campus");

                    b.Navigation("Classroom");

                    b.Navigation("Course");

                    b.Navigation("DayBlock");

                    b.Navigation("MeetingTime");

                    b.Navigation("Modality");

                    b.Navigation("PartOfTerm");

                    b.Navigation("PayModel");

                    b.Navigation("SectionStatus");

                    b.Navigation("Semester");

                    b.Navigation("WhoPays");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.Semester", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.SemesterStatus", "SemesterStatus")
                        .WithMany()
                        .HasForeignKey("SemesterStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.SemesterType", "SemesterType")
                        .WithMany()
                        .HasForeignKey("SemesterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SemesterStatus");

                    b.Navigation("SemesterType");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.StudentTime", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.StudentWishlistModality", "StudentWishlistModality")
                        .WithMany()
                        .HasForeignKey("StudentWishlistModalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.TimeBlock", "TimeBlock")
                        .WithMany()
                        .HasForeignKey("TimeBlockId");

                    b.Navigation("Campus");

                    b.Navigation("StudentWishlistModality");

                    b.Navigation("TimeBlock");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.StudentWishlist", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.StudentWishlistDetails", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.Infrastructure.Models.StudentWishlist", "StudentWishlist")
                        .WithMany()
                        .HasForeignKey("StudentWishlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("StudentWishlist");
                });

            modelBuilder.Entity("CASPAR.Infrastructure.Models.StudentWishlistModality", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Modality", "Modality")
                        .WithMany()
                        .HasForeignKey("ModalityId");

                    b.HasOne("CASPAR.Infrastructure.Models.StudentWishlistDetails", "StudentWishlistDetails")
                        .WithMany()
                        .HasForeignKey("StudentWishListDetailsId");

                    b.Navigation("Modality");

                    b.Navigation("StudentWishlistDetails");
                });

            modelBuilder.Entity("Infrastructure.Models.ClassroomFeaturePossession", b =>
                {
                    b.HasOne("CASPAR.Infrastructure.Models.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Models.ClassroomFeature", "ClassroomFeature")
                        .WithMany()
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("ClassroomFeature");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
